import telebot
import os
from dotenv import load_dotenv

load_dotenv()

bot = telebot.TeleBot(os.getenv('Bot_token'))
rapidkey = os.getenv("rapidapi-key")
rapidhost = os.getenv("rapidapi-host")


class User_search:
    """
    Класс, необходимый для хранения поисковой информации
    Attributes:
        city (str): Содержится название города, в котором осуществляется поиск.
        found_cities (dict): Содержится информация обо всех найденных городах похожих по названию к искомому.
        city_id (int): Содержится идентификационный номер id, необходимый для поиска информации по сайту hotels.com,
        так как поиск отелей в городе осуществляется не по названию города, а по его id номеру.
        hotels (dict): Для заданного количества отелей находится заранее определенная информация и упаковывается
        в словарь из словарей, который имеет следующий шаблон:
        {'Название отеля': {Информация по отелю}, 'Название отеля': {Информация по отелю}}
        Информация по отелю содержит в себе ID отеля, адрес, координаты, удаленность от центра, цену за 1 сутки, рейтинг
        отеля по мнению сайта, рейтинг отеля с точки зрения посетителей, ссылку на сайт.
        photos_dict (dict): Содержится словарь {'ID отеля': [список ссылок на фотографии]}, в последствии превращаемый
        в итерируемый объект путем создания объекта класс Photo_album
        photos_dict_urls (dict): Содержится словарь {'message.id': [итерируемый в обе стороны список фотографий]},
        который привязывается уже не к id отеля, а к id самого сообщения. Так как message_id для сообщения с
        фотографией и с клавиатурой одинаковые этот словарь позволяет программе понимать из какого словаря выбирать
        фотографии в зависимости от нажатой клавиши под соответствующей фотографией
    """
    def __init__(self):
        self.city = None
        self.found_cities = None
        self.city_id = None
        self.hotels = None
        self.photos_dict = None
        self.photos_dict_urls = None
        

search = User_search()
